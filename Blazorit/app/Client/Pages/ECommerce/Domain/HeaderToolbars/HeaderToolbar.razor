@using Blazorit.Client.Providers.Concrete.Identity;
@using Blazorit.Client.Pages.ECommerce.Identity
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="@GetClass("header-toolbar")">
    <GridRow Justify="space-between">
        <GridCol Flex="1" Class="header-toolbar-accout tool">
            <Space Direction="DirectionVHType.Horizontal">
                <ChildContent>
                    <SpaceItem>
                        <AuthorizeView>
                            <Authorized>
                                <Button Ghost Type="@ButtonType.Text" OnClick=@(() => Navigation.NavigateTo(ConstPage.ACCOUNT))>
                                    Account
                                </Button>
                            </Authorized>
                            <NotAuthorized>
                                <Button Ghost Type="@ButtonType.Dashed" OnClick="NavigateToLogin">
                                    Sign in
                                </Button>
                            </NotAuthorized>
                        </AuthorizeView>
                    </SpaceItem>
                    <SpaceItem>
                        <AuthorizeView>
                            <Authorized>
                                <Button Ghost Type="@ButtonType.Text" OnClick=@(() => Logout())>
                                    Sign out
                                </Button>
                            </Authorized>
                            <NotAuthorized>
                                <Button Ghost Type="@ButtonType.Dashed" OnClick=@(() => Navigation.NavigateTo(ConstPage.REGISTR))>
                                    Sign up
                                </Button>
                            </NotAuthorized>
                        </AuthorizeView>
                    </SpaceItem>
                    <SpaceItem>
                        <AuthorizeView Roles="admin_role">
                            <Authorized>
                                <Button Ghost Danger OnClick=@(() => Navigation.NavigateTo("/admin"))>
                                    Admin
                                </Button>
                            </Authorized>
                        </AuthorizeView>
                    </SpaceItem>
                </ChildContent>            
                </Space>  
        </GridCol>            

        <GridCol Flex="1" Class="header-toolbar-cart tool" Style="float:right;">
            <Space Direction="DirectionVHType.Horizontal">
                <Split>
                    <Divider Type="DirectionVHType.Vertical" Class="nav-divider" />
                </Split>
                <ChildContent>
                    <SpaceItem>
                        <Button Ghost Type="@ButtonType.Text">
                            Favorite
                        </Button>
                    </SpaceItem>
                    <SpaceItem>
                         <Button Ghost Type="@ButtonType.Text">
                             ShopCart
                         </Button>
                    </SpaceItem>
                </ChildContent>
            </Space>
        </GridCol>
    </GridRow>   
</div>
     



@code {
    [Parameter]
    public string? Name { get; set; }

    private string GetClass(string classes) {
        if (string.IsNullOrEmpty(Name)) {
            return classes;
        }

        return $"{Name} {classes}";
    }

    private void NavigateToLogin() {
        Navigation.NavigateTo(ConstPage.LOGIN);
    }

    private async Task Logout() {
        var authProvider = AuthenticationStateProvider as CustomAuthStateProvider;
        if (authProvider == null) return;
        await authProvider.LogoutAuthenticationStateAsync();
        Navigation.NavigateTo("/", true);
    }



    ////CssBuilder classHeaderToolboar = BlazorComponentUtilities.CssBuilder.Default("header-toolbar").AddClass("");    
}
