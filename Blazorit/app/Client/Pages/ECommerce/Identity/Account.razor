@using Blazorit.Shared.Models.Identity
@using Blazorit.Client.Providers.Concrete.Identity
@using Blazorit.Client.Services.Abstract.Identity
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IIdentityService IdentityService
@inject NavigationManager NavigationManager 
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<AuthorizeView>
    <h3>You're logged in with <i>@context.User.Identity?.Name</i></h3>
</AuthorizeView>

<GridRow>
    <GridCol Xs="24" Lg="12" Xxl=8>
        <Card Title="Change Password">
            <Body>
                <Form Loading="loading" Model="@changePassModel"
                      LabelColSpan="8"
                      
                      OnFinish="HandleChangePassword">
                    <FormItem Label="New Password">
                        <InputPassword @bind-Value="@context.Password" />
                    </FormItem>
                    <FormItem Label="Confirm New Password">
                        <InputPassword @bind-Value="@context.ConfirmPassword" />
                    </FormItem>
                    <FormItem WrapperColOffset="8" WrapperColSpan="3">
                        <Button Type="@ButtonType.Primary" HtmlType="submit">
                            Apply
                        </Button>
                    </FormItem>
                </Form>
                
                @if (!string.IsNullOrEmpty(message)) {
                    <div style="text-align:center;">
                        <Tag Color="@messageCssClass">@message</Tag>
                    </div>                          
                }
            </Body>
        </Card>
    </GridCol>
</GridRow>


@code {
    private bool loading = false;

    private UserChangePassword changePassModel = new UserChangePassword();

    private string message = string.Empty;
    private string messageCssClass = string.Empty;
    

    private async Task HandleChangePassword()
    {
        message = string.Empty;
        loading = true;
        
        var result = await IdentityService.ChangePassword(changePassModel);
        message = result.Message;

        if (result.Success) {
            messageCssClass = PresetColor.Green.ToString();
        } else {
            messageCssClass = PresetColor.Red.ToString();
        }

        loading = false;
    }
}
